apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: kevi-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: kevis.packages.cattle.io
spec:
  group: packages.cattle.io
  names:
    kind: Kevi
    listKind: KeviList
    plural: kevis
    singular: kevi
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Kevi is the Schema for the kevis API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeviSpec defines the desired state of Kevi
            properties:
              packages:
                items:
                  properties:
                    chart:
                      properties:
                        name:
                          type: string
                        path:
                          type: string
                        repoUrl:
                          type: string
                        version:
                          type: string
                      type: object
                    images:
                      items:
                        type: string
                      type: array
                    manifest:
                      properties:
                        path:
                          type: string
                      required:
                      - path
                      type: object
                    name:
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: KeviStatus defines the observed state of Kevi
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kevi-controller-manager
  namespace: kevi-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kevi-leader-election-role
  namespace: kevi-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kevi-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kevi-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kevi-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kevi-leader-election-rolebinding
  namespace: kevi-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kevi-leader-election-role
subjects:
- kind: ServiceAccount
  name: kevi-controller-manager
  namespace: kevi-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kevi-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kevi-manager-role
subjects:
- kind: ServiceAccount
  name: kevi-controller-manager
  namespace: kevi-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kevi-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kevi-proxy-role
subjects:
- kind: ServiceAccount
  name: kevi-controller-manager
  namespace: kevi-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 18641b0c.cattle.io
kind: ConfigMap
metadata:
  name: kevi-manager-config
  namespace: kevi-system
---
apiVersion: v1
kind: Secret
metadata:
  name: kevi-webhook-server-cert
  namespace: kevi-system
---
apiVersion: v1
kind: Service
metadata:
  name: kevi-controller-manager
  namespace: kevi-system
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: kevi-controller-manager-metrics-service
  namespace: kevi-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: kevi-controller-manager
  namespace: kevi-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --dev
        - --registry={{ .Registry }}
        command:
        - /kevi
        - manager
        {{- if .Image }}
        image: "{{ .Image }}"
        {{- else }}
        image: "{{ .Registry }}/kevi/kevi-controller:latest"
        {{- end }}
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 10
        name: manager
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kevi-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: kevi-webhook-server-cert
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: kevi-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: kevi-controller-manager
      namespace: kevi-system
      path: /mutate
      port: 443
  failurePolicy: Ignore
  matchPolicy: Exact
  name: mutator.kevi.cattle.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
    scope: Namespaced
  sideEffects: None
  timeoutSeconds: 10
